//
//  MainPresenter.swift
//  TestCleanSwift
//
//  Created by Tanasak.Nge on 25/5/2561 BE.
//  Copyright (c) 2561 NilNilNil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainPresentationLogic: BasePresenterLogic {
  func presentMovieList(response: Main.Something.Response)
  func presentErrorMessage(error: Main.Something.Error)

}

class MainPresenter: BasePresenter, MainPresentationLogic {

  weak var viewController: MainDisplayLogic? {
    didSet{
      baseViewController = viewController
    }
  }
  
  // MARK: Do something
  
  func presentMovieList(response: Main.Something.Response) {
    var viewModel: Main.Something.ViewModel = Main.Something.ViewModel(movieList: [])

    response.movieList.movies.compactMap{$0}.enumerated().forEach { (index, eachMovie) in
      let posterPath = APIs.downloadImage.loadImage(withSize: .thumbnail, withPath: eachMovie.posterPath)
      let rating     = "Rating: \(eachMovie.voteAverage)/10"
      var inputErrorMessage: String?
      if let validateError = (response.validateError?.filter{ $0.validateErrorIndex == index }.first) {
        inputErrorMessage = validateError.validateErrorMessage
      }
      let movie = Main.Something.ViewModel.Movie(movieTitle: eachMovie.name,
                                                 movieRating: rating,
                                                 moviePosterPath: posterPath,
                                                 movieInputErrorMessage: inputErrorMessage)
      viewModel.movieList.append(movie)
    }
    hideLoading()
    viewController?.displayFetchList(viewModel: viewModel)
  }

  func presentErrorMessage(error: Main.Something.Error) {
    hideLoading()
    viewController?.displayError(title: "Error", message: error.errorMessage)
  }

}
